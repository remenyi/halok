#+TITLE: 2. CCNA szemeszter

* Tartalom
- routerek és switchek beállítása egy kis hálózatban
- VLAN konfigurálás
- Hozzáférések beállítása IPv4 felett
- DHCPv4 és DHCPv6 konfiguráció és verifikáció
- NAT konfiguráció IPv4 felett
- egyéb hálózati konfigurálás, monitorozás, karbantartás

* Routing

** Routerek

*** Alapvető működése
    1. Az bejövő packet kicsomagolása, hogy hozzáférjen a 3. rétegbeli
       fej részhez
    2. Megvizsgálja a cél ip-címet és kiválasztja a legjobb utat a
       routing táblából
    3. Ha van út a cél felé, akkor becsomagolja egy másik keretbe, és
       kiküldi a megfelelő interfészen (a típusa lehet a beérkezett
       kerettől különböző), ha nincs, akkor eldobja vagy kiküldi a
       *Last Resort* interfészen (ha fel van konfigurálva)

*** Tárolóeszközök
    - RAM: futó konfiguráció
    - ROM: diagnosztikai és bootolási eszközök
    - Flash: IOS és rendszerfájlok
    - NVRAM: startup konfig

*** Kapcsolódás
    - Konzolos:
      - soros port: ok, ha van a gépnek soros portja, egyébként
        usb\rightarrow{}RS-232 adapter
      - USB A port: ez a routeren az USB Mini-B portba megy, driver
        kell hozzá

*** LED-ek
    - RJ-45:
      - bal odali (Speed):
	- 1 felvillanás + szünet: 10 Mb/s
	- 2 felvillanás + szünet: 100 Mb/s
	- 3 felvillanás + szünet: 1000 Mb/s
      - jobb oldali (Link): ha világít van kapcsolat
    - A többi nagyjából egyértelmű

*** Csomagtovábbító mechanizmusok

    - *Processzváltás*: minden egyes csomagra processzt vált, majd a
      processzor kikeresi a routing táblából a cél interfészt
    - *Gyors átváltás*: egy cache használatával felgyorsítja a
      továbbküldést
    - *Cisco Express Forwarding (CEF)*: két chache-t is használ, amik
      csak a hálózati topológia változásaira frissítődnek, gyorsabb az
      előzőeknél

*** A legjobb út kiválasztása
    - *metrikák* alapján történik
      - egy hálózathoz vezető út számmal mért távolsága
      - pl.: hopszám, sávszélesség
    - *routing protokollok* dinamikusan, egy metrika (vagy metrikák)
      alapján határozzák meg a 'szerintük' legjobb utat, és ez alapján
      frissítik a routing táblát
    - *load balancing*: ha több azonos metrikájú útvonal van, akkor
      egyenlően osztja el a csomagokat (EIGRP protokoll támogatja a
      nem egyenlő elosztást)
    - *administrative distance*: a routing táblába történő bejegyzés
      megbízhatóságát adja meg

      | Bejegyzés forrása  | Adminisztratív távolság |
      |--------------------+-------------------------|
      | Direkt kapcsolat   |                       0 |
      | Statikus bejegyzés |                       1 |
      | EIGRP summary role |                       5 |
      | External BGP       |                      20 |
      | Internal EIGRP     |                      90 |
      | IGRP               |                     100 |
      | OSPF               |                     110 |
      | IS-IS              |                     115 |
      | RIP                |                     120 |
      | External EIGRP     |                     170 |
      | Internal BGP       |                     200 |

*** Routing tábla
**** Bejegyzések forrása:

      | Betűjel | Jelentés                                      |
      |---------+-----------------------------------------------|
      | L       | Egy interfészhez köthető ip-cím               |
      | C       | Közvetlenül kapcsolódó hálózat                |
      | S       | Statikus út egy távoli hálózat felé           |
      | D       | Egy másik routertől tanult, EIGRP protokollal |
      | O       | Egy másik routertől tanult, OSPF protokollal  |
      | R       | Egy másik routertől tanult, RIP protokollal   |
      
**** Egy távoli hálózat bejegyzésének részei:

      | <1> | <2> | [<3>/<4>] | via | <5> | <6> | <7> |

      - 1: bejegyzés forrása
      - 2: cél hálózat címe és maszkja
      - 3: adminisztratív távolság
      - 4: metrika
      - 5: next-hop ip-cím (nem a kimenő interfész ip-címe!)
      - 6: mennyi idő telt el az út megtanulása óta
      - 7: az interfész amelyre továbbít
    
**** Egy közvetlenül kapcsolódó hálózat bejegyzésének részei:

      | <1> | <2> is directly connected | <3> |

      - 1: bejegyzés forrása, =C= vagy =L=
      - 2: cél hálózat címe és maszkja
      - 3: az interfész amelyre továbbít
	
      - IOS 15 előtt az =L= bejegyzések nem kerültek kiírásra az IPv4
        táblában, de az IPv6 táblában mindig

**** Hierarchia
      - *Ultimate route*: 
        - Aminek next-hop ip-cím vagy interfész van megadva 
        - Ilyenek a közvetlenül kapcsolódó hálózatok (C), a local route-ok (L) és a
          a dinamikus route-ok (D, O, R)
      - *Level 1 route*:
        - Minden olyan útvonal, ahol a maszk kisebb vagy egyenlő a
          célhálózat csoportos maszkjával (A-\8, B-\16, C-\24)
        - Ilyen a
          - *Default route*: 0.0.0.0/0-ás route
          - *Network route*: a maszk megegyezik a célhálózat csoportos maszkjával
          - *Supernet route*: a maszk kisebbb a célhálózat csoportos maszkjánál
        - Források:
          - Közvetlenül kapcsolódó hálózat
          - Statikus route
          - Dinamikus route
      - *Level 1 parent route*:
        - Egy olyan hálózat, ami több más hálózatra van osztva
        - Ennek a hálózatnak a maszkja is osztályokra van osztva
      - *Level 2 child route*:
        - Level 1 parent route gyerekei
        - A forrás ugyanaz, mint a level 1 route-nál
        - Egyben ultimate route-ok is
      - IPv6-os táblában nincsen hierarchia, minden level 1 ultimate route,
        mivel az IPv6 classless
**** Keresés
     - Először megnézi a level 1 route-okban a legjobb találatot
       - Ha van ultimate route, akkor továbbítja
       - Ha parent route-ot talált, akkor
         - Ha level 2 child route-ot talált, akkor továbbítja
         - Ha nincs találat, akkor
           - Tovább keres a level 1 supernet route-okban, beleértve a 
             default route-ot is
     - Balról számítva a legtöbb megegyező bit-es útvonalat választja
     - Az útvonal maszkja határozza meg, hogy hány bitnek kell megegyeznie

*** Statikus bejegyzés
    - fajtái:
      - statikus útvonal egy adott hálózat felé
      - alapértelmezett statikus útvonal: egy statikusan kiválasztott
        interfész vagy next-hop eszköz felé irányítja a
        csomagokat. Akkor a legjobb, ha a router csak egy másik routerhez
        csatlakozik
    - linkek az IOS parancsokhoz (később...)

** Statikus routing
*** Előnyök és hátrányok
    |                    | dinamikus routing                              | statikus routing                      |
    |--------------------+------------------------------------------------+---------------------------------------|
    | komplexitás        | független a hálózat méretétől                  | a hálózat méretével nő                |
    | topológia változás | automatikusan adaptál                          | adminisztrátori beavatkozás szükséges |
    | skálázhatóság      | jól skálázható kis és nagy hálózatokban        | csak kis hálózatokban skálázható jól  |
    | biztonság          | kevésbé biztonságos                            | biztonságosabb                        |
    | erőforrásigény     | több CPU-t, memóriát és sávszélességet használ | nincsenek extra költségek             |
    | kiszámíthatóság    | az aktuális topológiától függ                  | mindig ugyanaz                        |

*** Alkalmazások
    - kis hálózatoknál jó, ami valószínűleg nem változik nagyon
    - *stub hálózatoknál*: egy routeren keresztül lehet elérni, az is
      csak egyetlenegy másik routerhez van kapcsolva
    - alapértelmezett útvonalválasztásnál, ahol nincsen specifikusabb
      bejegyzés
    - backup útvonal létrehozásánál

*** Standard Static Route
    - ipv4 vagy ipv6-os hálózatok adhatóak meg statikus úton

*** Default Static Route
    - *Gateway of Last Resort*
    - a bejegyzés minden ip packettel megegyezik, ha nincs
      specifikusabb
    - statikusan vagy dinamikusan megadható
    - cél hálózat 0.0.0.0/0 vagy ::0/0
    - *stub routereknél*: csak egyetlenegy másik router a szomszédja

*** Summary Static Route
    - több cél hálózatot összegez egy hálózatra
      - ha a több cél hálózat szomszédos a hálózattal
      - ha a több cél hálózat ugyanazon az interfészen vagy next-hop
        címen érhetőek el

*** Floating Static Route
    - backup elsődleges dinamikus vagy statikus útvonalakhoz
    - nagyobb adminisztrációs távolsággal van konfigurálva

*** Statikus hálózat céljának megadása
    - a next-hop-ip, az interfész vagy mindekettő megadásával
    - next-hop-ip esetén először meg kell találnia a hálózathoz
      tartozó bejegyzést, majd a next-hop-ip-hez tartozó bejegyzést
    - az interfész megadásával csak egy keresést kell elvégezni
    - csak az interfész megadásával azonban előfordulhat, hogy több
      router is van az interfész hálózatán, így nem tudja, hogy melyik
      felé kell továbbítania
    - ilyenkor kell mind a kettő módot használni
    - link-local Ipv6-címeknél muszáj megadni az interfészt is, mivel
      a link-local címek nincsenek a routing táblában (mivel csak egy
      hálózaton belül egyediek)

*** Statikus hosztok megadása
    - 32 vagy 128 bites maszkkal

** Dinamikus routing

*** Routing protokollok
    - RIP(v2): kis hálózatokra
    - OSPF, IS-IS: nagyobb hálózatokra
    - IGRP, EIGRP: ciscos, nagyobb hálózatokra
    - BGP: ISPk között

*** Routing protokollok összetétele
    - Adatstruktúrák: a RAM-ban tárolja el a szükséges adatokat
    - Üzenetek: ezek segítségével fedezi fel a szomszédos routereket
      és cserél információt a hálózatokról
    - Algoritmusok: segítségével választja ki a legrövidebb utat

*** RIP
    - Passzív interfész
      - Nem küld update üzeneteket ezen az interfészen
      - Más interfészeken viszont hirdeti az interfészhez tartozó 
        hálózatot
      - LAN-oknál használják
    - Verziók
      - Alapértelmezetten a kimenő üzenetek v1-ek
      - Alapértelmezetten a bejövő üzenetek lehetnek v1-ek és v2-k,
        a v2-es mezőket levágja
    - Summary Static Route alapértelmezve van
    - Default Static Route állítható be

** Switchek

*** Borderless Switched Network
    - Hálózati architektúra
    - Cisco marketing cucc
    - Pl.: egy nagy kampusz hálózat + két kis kampusz hálózat
    - Fő jellemzői:
      - Hierarchikus: az eszközök rétegekbe szervezhetőek
      - Moduláris: jól bővíthető
      - Reziliens: mindig rendelkezésre áll
      - Flexibilis: intelligensen osztja el a hálózati terhelést
    - Rétegek:
      - *Access Layer*: 
	- A hálózat széle (*edge*), hozzáférést biztosít a
          felhasználóknak a hálózathoz.
	- Újabban intelligens eszközöket tesznek ide
      - *Distribution Layer*:
	- Access és Core Layer között
	- Az Access Layer beli eszközök elérik egymást
	- Utat nyit a Core Layer felé
	- Redundáns és egyenlő költségű utakat biztosít
      - *Core Layer*
	- Az Distribution Layer beli eszközöket köti össze
	- Pl. kampuszoknál érdemes a kiterjesztett csillag topológiát
          alkalmazni, ahol a Core Layer van középen
	- Kisebb kampuszokon összevonható a Distribution Layer-rel

*** Switch típusok
    - Fixen konfigurált switchek: nem bővíthető
    - Moduláris switchek: kártyákkal bővíthetőek a
      portok száma
    - Egymásra rakható (stackelhető) switchek: egy speciális nagy
      sávszélességű kébellel vannak összekötve, így úgy viselkednek,
      mint egy nagy switch

*** Switching tábla
    - Switching tábla alapján dönti el melyik portra továbbítja a
      keretet
    - Switching tábla kitöltése:
      1. Ha egy bejövő keret forrás címe nincs a táblában, akkor
         hozzáadja
      2. Ha létezik, akkor frissíti az időzítőt a bejegyzéshez (ami
         alap esetben kb. 5 perc)
      3. Ha a cél cím nincs a táblában, akkor kiküldi minden porton,
         kivéve azt a portot, ahonnan érkezett
      4. A cél cím akkor kerül a táblába, ha a cél eszköz visszaküld
         egy üzenetet
*** Továbbítás típusai:
    - *Store-and-forward*:
      - Megvárja, amíg a keret összes része megérkezett
      - Ellenőrzést végez, eldobja a helytelen kereteket
      - Egy porthoz rendelhető bufferben tárolja a keretet
      - Eltérő sebességű portok között muszáj ezt használni
      - Alapértelmezetten ez a beállítás működik a Cisco switchekben
    - *Cut-through*:
      - Azonnal továbbítja, amint a cél cím kiolvasható, nem várja meg
        a keret többi részét
      - A keret további részeit is meg tudja nézni, ami alapján
        további döntéseket hozhat a keret sorsáról
      - Sok hibás keret rossz hatással lehet a hálózat teljesítményére
      - *Fragment free switching*: megnézi az első 64 bájtot, mivel
        itt fordul elő a legtöbb hiba
      - Nagyteljesítményű számításoknál használják, ahol a processzek
        között max 10 ms lehet
*** Switching domainek
    - *Collision Domain*:
      - A hálózatnak azon részei, ahol a keretek összeütközhetnek az
        osztott médium miatt
      - Pl.: huboknál (a bejövő keretet minden portjára továbbítja) és
	half duplex kapcsolatoknál
      - Full duplex kapcsolatoknál nincs collision domain
    - *Broadcast Domain*
      - A hálózat azon részei, ahol a layer 2-es broadcast üzenetek
        elérnek
      - Minden különálló switch (nincs összekapcsolva más switchel) a
        saját bradcast domainjét alkotja
      - A routerek szegmentálják ezeket a domaineket (a collision
        domaineket is)
      - 
*** Switch boot
    - POST (Power On Self Test) program betöltése a ROM-ból
    - Boot loader szoftver betöltése a ROM-ból
    - A boot loader inicializálja a CPU regisztereket, meghatározza a
      memória méretét és sebességét (???)
    - A boot loader inicializálja a flash meghajtón lévő fájlrendszert
    - A boot loader betölti az IOS-t a memóriába, és átadja a
      vezérlést az IOS-nek
    - A boot loader a BOOT környezeti változó alapján tölti be az IOS-t
    - Ha a BOOT üres, akkor rekurzívan megkeresi (mélységi) az első
      futtatható bináris fájlt

*** Helyreállítás összeomlás után
    - Összeomlás után a konzol porton lehet elérni a boot loadert
    - A konzol porthoz való csatlakozás után ki kell kapcsolni a
      switchet
    - Bekapcsolás után a /Mode/ gombot kell nyomkodni, amíg a System
      led villogás helyett sárga majd zöld nem lesz
    - A boot loaderben formázni lehet a flash tárhelyet, és
      újrainstallálni az IOS-t, vagy helyreállítani egy elvesztett
      jelszót

*** LED-ek
    - A ledek között a MODE gombbal lehet váltani
    - *System LED*: 
      - Van-e áram
      - Ha zöld, akkor jól üzemel
      - Ha sárga, akkor nem (pl.: helyreállítás)
    - *Redundant Power System (RPS) LED*:
      - Az RPS állapotáról ad infót
      - Ha zöld akkor, készenlétben van
      - Ha villog, akkor egy másik egység számára biztosít áramot
      - Ha sárga, akkor hibás
      - Ha sárgán villog, akkor csak az RPS látja el árammal a switchet
    - *Port Status LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő jelek jelentése a
        következő:
      - Ha zöld akkor van kapcsolat
      - Ha zölden villog akkor érkeznek adatok
      - Ha zölden és sárgán villog akkor linkhiba van
      - Ha sárga vagy sárgán villog akkor direkt van lekapcsolva, hogy
        ne legyen hurok a forwarding domainben (???)
    - *Port Duplex LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő zölden égő LED-ek
        a full-duplex üzemmódot jelentik
      - A nem égő ledek a half-duplexet
    - *Port Speed LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő ledek a link
        sebességét jelzik
      - Kikapcsolt led 10 Mb/s
      - Zöld led 100 Mb/s
      - Zölden villogó led 1000 Mb/s
    - *Power over Ethernet (PoE) LED*:
      - Ha nem világít, akkor nincsen PoE
      - Ha sárgán villog, akkor nincsen PoE módban, de legalább egy
        porton nincsen engedélyezve az áramfelvétel, vagy PoE hibás
      - Ha zöld, akkor a portokon lévő ledek a következőek lehetnek:
	- Ha nem világít, akkor a PoE ki van kapcsolva
	- Ha zöld, akkor van PoE
	- Ha zöld és sárga között váltakozik, akkor a switchnek
          nincsen elég kapacitása az áramot nyújtani
	- Ha sárgán villog, akkor PoE hiba történt
	- Ha sárga, akkor a PoE le van tiltva

*** Hibakeresés
    - ~show interfaces <interfész>~ parancs kiadásával az ~<interfész> is up~ a
      fizikai rétegről ad információt, a ~line protocol is up~ az adat
      rétegről ad információt
     | Interfész státusz     | Line protokoll státusz | Link állapot   |
     |-----------------------+------------------------+----------------|
     | Up                    | Up                     | Ok             |
     | Down                  | Down                   | Interfész hiba |
     | Administratively down | Down                   | Down           |
    - Egyéb hibák, amik nem okoznak leállást, de a működést negatívan
      befolyásolhatják:
      - *Runt Frames*: olyan ethernet keretek, amelyek kisebbek a
        megengedettnél (64 bájt)
      - *Giants*: olyan ethernet keretek, amelyek nagyobbak a
        megengedettnél
      - *CRC hibák*: az ellenőrzés nem sikerül, nagy interferencia
        okozhatja
      - *Ütközések*: csak half-duplexeknél fordulhat elő
      - *Késői ütközések*: olyan ütközések, amelyek 512 bit elküldése
        után jelentkeznek. Hosszú kábelek vagy rosszul konfigurált
        duplexitás lehet az oka
*** Biztonság
    - Nem használt portok letiltása, az ~interface range <típus>
      <modul>/<első>-<utolsó>~ parancs megkönnyíti
    - Biztonságos MAC-cím(ek) számát lehet engedélyezni egy portra
    - Biztonságos MAC-cím lehet:
      - Statikus: manuálisan vannak beállítva egy portra
      - Dinamikus:
	- A switch dinamikusan tanulja
	- Csak a switch táblában van benne
      - Ragadós:
	- A futó konfigban is el van tárolva
	- A futó konfigból el lesz távolítva, ha a biztonság ki van
          kapcsolva a portra
	- Kikapcsolásnál elveszik, de el lehet menteni a startup
          konfigba
	- A ragadós tanulás kikapcsolásával dinamikusak lesznek
    - Biztonság megsértéséből adódó üzemmód lehet:
      - Protect: ha a megengedettnél több MAC-cím bejegyzés tartozna
        egy porthoz, akkor az ismeretlen forrású kereteket eldobja
      - Restricted: ugyanaz, de itt van syslog jelzés
      - Shutdown: ugyanaz, de az interfész elérhetetlenné válik, a ~no
        shutdown~ paranccsal visszahozható
    - Alapból a biztonság ki van kapcsolva
    - Ha a biztonság be van kapcsolva, akkor max 1 darab biztonságos
      MAC-cím lehet shutdown üzemmódban, és a ragadós címtanulás ki van
      kapcsolva
* Vlan

** Definíció
   - Logikai hálózatok
   - Egy fizikai hálózaton osztozkodnak
   - Minden switch port hozzárendelhető egy ilyen hálózathoz
   - A broadcast, multicast és unicast csomagok a virtuális hálózatnak
     megfelelően lesznek továbbítva

** Előnyök
   - Leszűkíti a layer 2-es broadcast domaint
   - Csoportosíthatóak vele szervezeti egységek
   - Nem kell drága eszközökre költeni

** Típusok
   - *DATA Vlan*: minden adat, ami nem hang vagy management
   - *Default Vlan*: minden switch port alap esetben ehhez tartozik, száma 1
   - *Native Vlan*:
     - 802.1Q trunk porthoz van rendelve
     - *Trunk port*:
       - Olyan switch portok, amelyekhez több Vlan tartozik
       - Támogatja a nem Vlan-ból jövő csomagokat (*untagged traffic*) is
       - *Tagged traffic*: 4 bájtos Vlan azonosító van az ethernet frame-ben
       - Untagged traffic alap esetben a Vlan 1-re lesz irányítva
     - Megőrzi a kompatibilitást az untagged trafic-al
   - *Management Vlan*:
     - Úgy van konfigurálva, hogy menedzselni lehessen a switchet rajta keresztül
     - Alapból a Vlan 1
     - Újabb IOS verziókban (15.x) több is lehet
   - *Voice Vlan*:
     - VoIP forgalomhoz
     - Követelmények:
       - Stabil sávszélesség
       - Magasabb prioritás a többi csomaghoz képest
       - Zsúfolt részek kikerülése
       - Kisebb, mint 150 ms késleltetés

** Inter-vlan routing
   - Legacy inter-vlan routing: a hálózatok címe külön portokhoz vannak kötve
   - Router-on-a-Stick: a hálózatok címe egy porthoz van kötve

* Access Control Lists (ACLs)
** Feladatai
- Adatforgalom szűrése (pl. videó, telnet, stb...)
- Routing információk visszatartása
- Hozzáférés szabályozása egy hálózathoz
- Adatforgalom megfigyelése
- Prioritás megadása
** Access Control Entries (ACEs)
- Elutasító (*deny*) vagy engedélyező (*permit*) kijelentések listája
- Egy ACL-t alkotnak
- A router egy porthoz rendelt ACE-eken végigmegy, és a kijelentések
  alapján szűr (*filtering*)
- A szűrés a 3. és 4. layeren történhet
- Minden ACL végén van egy elutasító ACE
** ACL típusok
- *Inbound ACLs*: bejövő packetekre előbb szűrünk, csak ezután van
  routing
- *Outbound ACLs*: a bejövő packeteket routingoljuk, csak ezután
  szűrünk
- Semelyik router forrású packetre sincs szűrés
** Wildcard masking
- Egy 32 bites digit, ami kijelöli az összehasonlítani kívánt biteket
- Hasonló az ip maszkokhoz, *csak fordítva...*
- 0-ás: vizsgálja meg a bithez tartozó címbitet
- 1-es: ne vizsgálja meg a bithez tartozó címbitet
- NAND kapcsolat
- Speciális kulcsszavak:
  - *host*: csak a hosztot engedélyezi (0.0.0.0)
  - *any*: mindent engedélyez (255.255.255.255)
** Szabályok
- Csak egy protokollra...
- Csak egy irányba...
- Csak egy interfészre...
- lehet létrehozni ACL-t
** Elhelyezés
- *Extended ACLs*: minél közelebb a forráshoz, így nem kerülnek nem
  kívánt csomagok a nagyobb hálózatba
- *Standard ACLs*: minél közelebb a célhoz, így a többi hálózathoz is
  eljuthatnak a csomagok
** ACE-k sorrendje
- Egy subnetre vonatkozó deny bejegyzés után nem rakhatunk egy permit
  bejegyzést ugyanabban a hatótávolságban, de fordítva ok
- Egyébként az IOS szól
- A bejegyzések csak részben a megadás sorrendjében vannak eltárolva és
  processzálva
- A szekvenciaszám a megadás sorrendjét mutatja
- A host bejegyzések vannak előbb, de nem feltétlenül a megadás
  sorrendjében (hatékonyság)
- Az intervallum bejegyzések következnek utána, a megadás sorrendjében
* TODO DHCP

* NAT

** A NAT
   - Egy belső hálózaton lévő eszközök ip címét lefordítja a külső
     hálózaton lévő egyedi címre

** Előnyök
   - Mérsékli a szűkös ipv4 címek kimerülését
   - Biztonságosabb, mivel elrejti a privát címeket, és állapotalapú
     szűrést végez (pl. nem várt TCP szegmenseket eldobja)
   - Flexibilisebb a publikus hálózathoz való csatlakozásban
     (pl. load-balancing)
   - Konzisztencia fenntartása (pl. ha új külső címeket akarunk, mert
     ISP-t váltottunk, de nem akarjuk megváltoztatni a privát címeket)

** Hátrányok
   - Lassabb: az első packet midig process-switched, meg kell
     változtatni a packet headert, és valószínűleg a TCP vagy UDP
     headert + a checksumokat
   - Végpont-végpont címek elvesztése, ami a biztonsági protokolloknál
     gondot okozhat

** Terminológia
   - Inside address: egy forrás eszköz címe (lokális vagy globális), amelyet a NAT lefordít
   - Outside address: a cél eszköz címe (lokális vagy globális)
   - Local address: belső hálózaton lévő címek
   - Global address: külső hálózaton lévő címek
   - *Inside local address*: egy forrás eszköz címe a belső hálózaton
   - *Inside global address*: egy forrás eszköz címe a külső
     hálózaton, vagyis az a cím, amit a NAT lefordított
   - *Outside global address*: a cél eszköz címe a külső hálózaton
   - *Outside local address*: a cél eszköz címe a belső hálózaton
     (általában ugyanaz mint az outside global address)

** NAT típusok
   - *Statikus NAT*:
     - Egy-egy leképezés a címek között
     - Hálózati adminisztrátor állítja be
     - Webszervereknél használják
   - *Dinamikus NAT*: 
     - Több-több leképezés
     - A rendelkezésre álló címekből választ inside global address-t
     - Ezért nem hatékony, ha pl. 100 hoszt van a belső hálózaton és
       10 szabad cím van
   - *Port Address Translation (PAT)*:
     - Több-egy leképezés
     - Portszámokat használ az egyedi azonosításhoz
     - Minden belső címhez más portszámot rendel
     - A portszámokat igyekszik megőrizni
     - Ha két forrás packet portszáma ugyanaz, akkor a későbbit eggyel
       megnöveli
     - Ha a portszámok is kifogytak, akkor egy új globális címet
       választ
     - Ha nincs 4. layer portszám, akkor azt PAT kölümböző módokon
       kezeli (pl. ICMPv4 Query ID)

** Port forwarding
   - A router a bejövő csomagokat a portszám alapján továbbküldi egy
     privát címre
   - Akkor jó, ha kívülről érkeznek kérések, vagyis szerverek vannak a
     privát hálózaton
   - Ha pl. webszerver működik a privát hálózaton, akkor a szerver
     ip-címként a külső WAN címet kell megadni
   - A privát portszám lehet más mint a publikus

** NAT64
   - Átjárás IPv4 és IPv6 hálózatok között
   - Ideális esetben minden hálózatnak IPv6-osnak kellene lennie, a
     NAT64 az átmenetet segíti
   - Egyéb átmeneti megoldások:
     - *Dual-stack*: IPv4 és IPv6 protokoll stack együtt fut az
       eszközökön
     - *Tunneling*: IPv6 packetek IPv4 packetekbe ágyazása

* Eszközfelismerés

** Cisco Discovery Protocol (CDP)
   - Cisco eszközök egymás között
   - Információ szomszédos eszközökről
   - Hasznos, ha nincsen meg a dokumentáció a topológiáról
   - Egy üzenet tartalma:
     - Eszköz típus
     - Eszköznév
     - Interfészek száma és típusa

** Link Layer Discovery Protocoll (LLDP)
   - Gyártófüggetlen
   - Nem ad információt az interfészek számáról

* Network Time Protocol (NTP)
  - Manuálisan vagy NTP segítségével lehet beállítani az időt
  - Egy NTP szerver idejével szinkronizálja az eszközöket
  - Egy szerver lehet publikus vagy privát
  - 123-as UPD porton keresztül
  - Hierarchiába rendezhetőek
    - Egy szint a hierarchiában a *startum*
    - Minden stratum a hopszám szerint növekszik
    - 0-ás stratum a legpontosabb
    - 1-es stratum az első szerver, amely a standard időt adja
    - 2-es és további stratumok kliensek és szerverek is lehetnek
      magasabb startumok számára
    - Max. 15 stratum lehet
    - Ha egy eszköz stratuma 16, akkor nincs szinkronban
    - Egy stratum szinten lévő eszközök egymást verifikálhatják

* Syslog
  - Rendszerüzenetek küldése egy központi szerverre
  - 514-es UDP porton keresztül
  - Syslog üzenet célok:
    - Logging buffer
    - Konzol
    - Terminál
    - Szerver
  - Az adminisztrátor választhatja meg az üzenetek célját
  - Üzenetek szintjei:
    | Név           | Szint | Magyarázat                     |
    |---------------+-------+--------------------------------|
    | Emergency     |     0 | A rendszer használhatatlan     |
    | Alert         |     1 | Azonnali beavatkozás szükséges |
    | Critical      |     2 | Kritikus kondíció              |
    | Error         |     3 | Error kondíció                 |
    | Warning       |     4 | Figyelmeztető kondíció         |
    | Notification  |     5 | Normális, de jeletős kondíció  |
    | Informational |     6 | Információs üzenet             |
    | Debugging     |     7 | Debugging üzenet               |
    - 0-4 szint: hardveres vagy szoftveres hiba
    - 5-ös szint: normális, de jelentős üzenetek, pl. interfészek
      engedélyezése/tiltása
    - 6-os szint: csak információ, pl. a bootolásnál megjelenő
      információk
    - 7-es szint: a ~debug~ parancsok hatására generált üzenetek
  - Üzenetek formátuma:
    | Mező        | Magyarázat                                                                                         |
    |-------------+----------------------------------------------------------------------------------------------------|
    | Seq no      | Csak akkor jelenik meg, ha be van kapcsolva a ~service sequence-numbers~                           |
    | Timestamp   | Csak akkor jelenik meg, ha be van kapcsolva a ~sevice timestamps log datetime~                     |
    | Facility    | Egy rész, amihez az üzenet tartozik. Pl. IP, OSPF, SYS (operációs rendszer), IPsec, IF (interfész) |
    | Severity    | Az üzenet szintje                                                                                  |
    | MNEMONIC    | Az üzenet maga                                                                                     |
    | Description | Részletes leírás                                                                                   |

* STP
  - Hurkok kialakulásának megakadályozása Layer 2 ethernet hálózatokban
  - Hurkok alakulhatnak ki unkown-unicast, multicast vagy broadcast üzenetküldésnél
  - Algoritmus:
    - A switchek kiválasztanak egy /root bridge/ switchet, amelyhez megállapítják a legköltséghatékonyabb utat
    - Az utakban nem szereplő linkeken nem vezet át forgalmat
    - így nem alakul ki hurok a hálózatban
    - Vlan-ok esetében vlanonként lesz kiválasztva root bridge
  - Root bridge kiválasztás:
    - Bridge Protocol Data Units (BPDU):
      - Ezzel osztanak meg információt egymással a switchek
      - Tartalmaz egy Bridge ID-t (BID), amely 3 részből áll:
        - Bridge priority: alapértelmezetten 32769
        - Extended System ID: a vlan-t jelöli
        - MAC address: a switch MAC-címe
    - Minden switch a bekapcsolás után 2mp-ként BPDU üzeneteket küld
    - A legkissebb BID lesz a root bridge
    - Eleinte minden switch magát jelöli ki root bridge-nek, de utána a többi BPDU üzenet alapján a legkisebb BID-el rendelkező switchet választja
    - A bridge priority mezővel lehet beállítani a root bridge-t
  - Költségek meghatározása
    - A BPDU minden kimenő üzenethez hozzáadja a kimeneti port költségét
    - A költségek alapértelmezetten a 802.1D szabvány szerint vannak meghatározva
    | Sebesség | 802.1D | 802.1w    |
    |----------+--------+-----------|
    | 10 Gbps  | 2      | 2,000     |
    | 1 Gbps   | 4      | 20,000    |
    | 100 Mbps | 19     | 200,000   |
    | 10 Mbps  | 100    | 2,000,000 |
  - Portok típusa:
    - Root port: a root bridge-hez legközelebb lévő port
    - Designated port:
      - Minden root bridge port
      - A root portok párja a másik switchen
      - Ha egy link egyik portja sem root port, akkor a kisebb költségű lesz
    - Alternate(blocked) port:
      - Minden, ami nem az előző kettő
      - Blokkolva van rajta a forgalom
  - Portválasztás egyenlő költségű utak esetén
    1. A kisebb BID-el rendelkező switch felé eső portot választja
    2. A beérkező port priority alapján választ (az alacsonyabbat preferálja)
    3. A küldő port ID értékének alapján választ (az alacsonyabbat preferálja)
  - Időzítők:
    - Hello Timer: BPDU-k között eltelt idő (alapértelmezetten 2mp, 1-10 között állítható)
    - Forward Delay Timer: a hallgatózási és tanulási fázis időszaka (alapértelmezetten 15mp, 4-30 között állítható)
    - Max Age Timer: maximális idő, ami alatt a switch megpróbálja megváltoztatni a topológiát (alapértelmezetten 20mp, 6-40 között állítható)
