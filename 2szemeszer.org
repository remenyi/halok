#+TITLE: 2. CCNA szemeszter

* Tartalom
- routerek és switchek beállítása egy kis hálózatban
- VLAN konfigurálás
- Hozzáférések beállítása IPv4 felett
- DHCPv4 és DHCPv6 konfiguráció és verifikáció
- NAT konfiguráció IPv4 felett
- egyéb hálózati konfigurálás, monitorozás, karbantartás

* Routing

** Routerek

*** Alapvető működése
    1. Az bejövő packet kicsomagolása, hogy hozzáférjen a 3. rétegbeli
       fej részhez
    2. Megvizsgálja a cél ip-címet és kiválasztja a legjobb utat a
       routing táblából
    3. Ha van út a cél felé, akkor becsomagolja egy másik keretbe, és
       kiküldi a megfelelő interfészen (a típusa lehet a beérkezett
       kerettől különböző), ha nincs, akkor eldobja vagy kiküldi a
       *Last Resort* interfészen (ha fel van konfigurálva)

*** Tárolóeszközök
    - RAM: futó konfiguráció
    - ROM: diagnosztikai és bootolási eszközök
    - Flash: IOS és rendszerfájlok
    - NVRAM: startup konfig

*** Kapcsolódás
    - Konzolos:
      - soros port: ok, ha van a gépnek soros portja, egyébként
        usb\rightarrow{}RS-232 adapter
      - USB A port: ez a routeren az USB Mini-B portba megy, driver
        kell hozzá

*** LED-ek
    - RJ-45:
      - bal odali (Speed):
	- 1 felvillanás + szünet: 10 Mb/s
	- 2 felvillanás + szünet: 100 Mb/s
	- 3 felvillanás + szünet: 1000 Mb/s
      - jobb oldali (Link): ha világít van kapcsolat
    - A többi nagyjából egyértelmű

*** Csomagtovábbító mechanizmusok

    - *Processzváltás*: minden egyes csomagra processzt vált, majd a
      processzor kikeresi a routing táblából a cél interfészt
    - *Gyors átváltás*: egy cache használatával felgyorsítja a
      továbbküldést
    - *Cisco Express Forwarding (CEF)*: két chache-t is használ, amik
      csak a hálózati topológia változásaira frissítődnek, gyorsabb az
      előzőeknél

*** A legjobb út kiválasztása
    - *metrikák* alapján történik
      - egy hálózathoz vezető út számmal mért távolsága
      - pl.: hopszám, sávszélesség
    - *routing protokollok* dinamikusan, egy metrika (vagy metrikák)
      alapján határozzák meg a 'szerintük' legjobb utat, és ez alapján
      frissítik a routing táblát
    - *load balancing*: ha több azonos metrikájú útvonal van, akkor
      egyenlően osztja el a csomagokat (EIGRP protokoll támogatja a
      nem egyenlő elosztást)
    - *administrative distance*: a routing táblába történő bejegyzés
      megbízhatóságát adja meg

      | Bejegyzés forrása  | Adminisztratív távolság |
      |--------------------+-------------------------|
      | Direkt kapcsolat   |                       0 |
      | Statikus bejegyzés |                       1 |
      | EIGRP summary role |                       5 |
      | External BGP       |                      20 |
      | Internal EIGRP     |                      90 |
      | IGRP               |                     100 |
      | OSPF               |                     110 |
      | IS-IS              |                     115 |
      | RIP                |                     120 |
      | External EIGRP     |                     170 |
      | Internal BGP       |                     200 |

*** Routing tábla
    - Bejegyzések forrása:

      | Betűjel | Jelentés                                      |
      |---------+-----------------------------------------------|
      | L       | Egy interfészhez köthető ip-cím               |
      | C       | Közvetlenül kapcsolódó hálózat                |
      | S       | Statikus út egy távoli hálózat felé           |
      | D       | Egy másik routertől tanult, EIGRP protokollal |
      | O       | Egy másik routertől tanult, OSPF protokollal  |
      
    - Egy távoli hálózat bejegyzésének részei:

      | <1> | <2> | [<3>/<4>] | via | <5> | <6> | <7> |

      - 1: bejegyzés forrása
      - 2: cél hálózat címe és maszkja
      - 3: adminisztratív távolság
      - 4: metrika
      - 5: next-hop ip-cím (nem a kimenő interfész ip-címe!)
      - 6: mennyi idő telt el az út megtanulása óta
      - 7: az interfész amelyre továbbít
    
    - Egy közvetlenül kapcsolódó hálózat bejegyzésének részei:

      | <1> | <2> is directly connected | <3> |

      - 1: bejegyzés forrása, =C= vagy =L=
      - 2: cél hálózat címe és maszkja
      - 3: az interfész amelyre továbbít
	
      - IOS 15 előtt az =L= bejegyzések nem kerültek kiírásra az IPv4
        táblában, de az IPv6 táblában mindig

*** Statikus bejegyzés
    - fajtái:
      - statikus útvonal egy adott hálózat felé
      - alapértelmezett statikus útvonal: egy statikusan kiválasztott
        interfész vagy next-hop eszköz felé irányítja a
        csomagokat. Akkor a legjobb, ha a router csak egy másik routerhez
        csatlakozik
    - linkek az IOS parancsokhoz (később...)

** Statikus routing
*** Előnyök és hátrányok
    |                    | dinamikus routing                              | statikus routing                      |
    |--------------------+------------------------------------------------+---------------------------------------|
    | komplexitás        | független a hálózat méretétől                  | a hálózat méretével nő                |
    | topológia változás | automatikusan adaptál                          | adminisztrátori beavatkozás szükséges |
    | skálázhatóság      | jól skálázható kis és nagy hálózatokban        | csak kis hálózatokban skálázható jól  |
    | biztonság          | kevésbé biztonságos                            | biztonságosabb                        |
    | erőforrásigény     | több CPU-t, memóriát és sávszélességet használ | nincsenek extra költségek             |
    | kiszámíthatóság    | az aktuális topológiától függ                  | mindig ugyanaz                        |

*** Alkalmazások
    - kis hálózatoknál jó, ami valószínűleg nem változik nagyon
    - *stub hálózatoknál*: egy routeren keresztül lehet elérni, az is
      csak egyetlenegy másik routerhez van kapcsolva
    - alapértelmezett útvonalválasztásnál, ahol nincsen specifikusabb
      bejegyzés
    - backup útvonal létrehozásánál

*** Standard Static Route
    - ipv4 vagy ipv6-os hálózatok adhatóak meg statikus úton

*** Default Static Route
    - *Gateway of Last Resort*
    - a bejegyzés minden ip packettel megegyezik, ha nincs
      specifikusabb
    - statikusan vagy dinamikusan megadható
    - cél hálózat 0.0.0.0/0 vagy ::0/0
    - *stub routereknél*: csak egyetlenegy másik router a szomszédja

*** Summary Static Route
    - több cél hálózatot összegez egy hálózatra
      - ha a több cél hálózat szomszédos a hálózattal
      - ha a több cél hálózat ugyanazon az interfészen vagy next-hop
        címen érhetőek el

*** Floating Static Route
    - backup elsődleges dinamikus vagy statikus útvonalakhoz
    - nagyobb adminisztrációs távolsággal van konfigurálva

*** Statikus hálózat céljának megadása
    - a next-hop-ip, az interfész vagy mindekettő megadásával
    - next-hop-ip esetén először meg kell találnia a hálózathoz
      tartozó bejegyzést, majd a next-hop-ip-hez tartozó bejegyzést
    - az interfész megadásával csak egy keresést kell elvégezni
    - csak az interfész megadásával azonban előfordulhat, hogy több
      router is van az interfész hálózatán, így nem tudja, hogy melyik
      felé kell továbbítania
    - ilyenkor kell mind a kettő módot használni
    - link-local Ipv6-címeknél muszáj megadni az interfészt is, mivel
      a link-local címek nincsenek a routing táblában (mivel csak egy
      hálózaton belül egyediek)

*** Statikus hosztok megadása
    - 32 vagy 128 bites maszkkal

** TODO Dinamikus routing

** Switchek

*** Borderless Switched Network
    - Hálózati architektúra
    - Cisco marketing cucc
    - Pl.: egy nagy kampusz hálózat + két kis kampusz hálózat
    - Fő jellemzői:
      - Hierarchikus: az eszközök rétegekbe szervezhetőek
      - Moduláris: jól bővíthető
      - Reziliens: mindig rendelkezésre áll
      - Flexibilis: intelligensen osztja el a hálózati terhelést
    - Rétegek:
      - *Access Layer*: 
	- A hálózat széle (*edge*), hozzáférést biztosít a
          felhasználóknak a hálózathoz.
	- Újabban intelligens eszközöket tesznek ide
      - *Distribution Layer*:
	- Access és Core Layer között
	- Az Access Layer beli eszközök elérik egymást
	- Utat nyit a Core Layer felé
	- Redundáns és egyenlő költségű utakat biztosít
      - *Core Layer*
	- Az Distribution Layer beli eszközöket köti össze
	- Pl. kampuszoknál érdemes a kiterjesztett csillag topológiát
          alkalmazni, ahol a Core Layer van középen
	- Kisebb kampuszokon összevonható a Distribution Layer-rel

*** Switch típusok
    - Fixen konfigurált switchek: nem bővíthető
    - Moduláris switchek: kártyákkal bővíthetőek a
      portok száma
    - Egymásra rakható (stackelhető) switchek: egy speciális nagy
      sávszélességű kébellel vannak összekötve, így úgy viselkednek,
      mint egy nagy switch

*** Switching tábla
    - Switching tábla alapján dönti el melyik portra továbbítja a
      keretet
    - Switching tábla kitöltése:
      1. Ha egy bejövő keret forrás címe nincs a táblában, akkor
         hozzáadja
      2. Ha létezik, akkor frissíti az időzítőt a bejegyzéshez (ami
         alap esetben kb. 5 perc)
      3. Ha a cél cím nincs a táblában, akkor kiküldi minden porton,
         kivéve azt a portot, ahonnan érkezett
      4. A cél cím akkor kerül a táblába, ha a cél eszköz visszaküld
         egy üzenetet
*** Továbbítás típusai:
    - *Store-and-forward*:
      - Megvárja, amíg a keret összes része megérkezett
      - Ellenőrzést végez, eldobja a helytelen kereteket
      - Egy porthoz rendelhető bufferben tárolja a keretet
      - Eltérő sebességű portok között muszáj ezt használni
      - Alapértelmezetten ez a beállítás működik a Cisco switchekben
    - *Cut-through*:
      - Azonnal továbbítja, amint a cél cím kiolvasható, nem várja meg
        a keret többi részét
      - A keret további részeit is meg tudja nézni, ami alapján
        további döntéseket hozhat a keret sorsáról
      - Sok hibás keret rossz hatással lehet a hálózat teljesítményére
      - *Fragment free switching*: megnézi az első 64 bájtot, mivel
        itt fordul elő a legtöbb hiba
      - Nagyteljesítményű számításoknál használják, ahol a processzek
        között max 10 ms lehet
*** Switching domainek
    - *Collision Domain*:
      - A hálózatnak azon részei, ahol a keretek összeütközhetnek az
        osztott médium miatt
      - Pl.: huboknál (a bejövő keretet minden portjára továbbítja) és
	half duplex kapcsolatoknál
      - Full duplex kapcsolatoknál nincs collision domain
    - *Broadcast Domain*
      - A hálózat azon részei, ahol a layer 2-es broadcast üzenetek
        elérnek
      - Minden különálló switch (nincs összekapcsolva más switchel) a
        saját bradcast domainjét alkotja
      - A routerek szegmentálják ezeket a domaineket (a collision
        domaineket is)
      - 
*** Switch boot
    - POST (Power On Self Test) program betöltése a ROM-ból
    - Boot loader szoftver betöltése a ROM-ból
    - A boot loader inicializálja a CPU regisztereket, meghatározza a
      memória méretét és sebességét (???)
    - A boot loader inicializálja a flash meghajtón lévő fájlrendszert
    - A boot loader betölti az IOS-t a memóriába, és átadja a
      vezérlést az IOS-nek
    - A boot loader a BOOT környezeti változó alapján tölti be az IOS-t
    - Ha a BOOT üres, akkor rekurzívan megkeresi (mélységi) az első
      futtatható bináris fájlt

*** Helyreállítás összeomlás után
    - Összeomlás után a konzol porton lehet elérni a boot loadert
    - A konzol porthoz való csatlakozás után ki kell kapcsolni a
      switchet
    - Bekapcsolás után a /Mode/ gombot kell nyomkodni, amíg a System
      led villogás helyett sárga majd zöld nem lesz
    - A boot loaderben formázni lehet a flash tárhelyet, és
      újrainstallálni az IOS-t, vagy helyreállítani egy elvesztett
      jelszót

*** LED-ek
    - A ledek között a MODE gombbal lehet váltani
    - *System LED*: 
      - Van-e áram
      - Ha zöld, akkor jól üzemel
      - Ha sárga, akkor nem (pl.: helyreállítás)
    - *Redundant Power System (RPS) LED*:
      - Az RPS állapotáról ad infót
      - Ha zöld akkor, készenlétben van
      - Ha villog, akkor egy másik egység számára biztosít áramot
      - Ha sárga, akkor hibás
      - Ha sárgán villog, akkor csak az RPS látja el árammal a switchet
    - *Port Status LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő jelek jelentése a
        következő:
      - Ha zöld akkor van kapcsolat
      - Ha zölden villog akkor érkeznek adatok
      - Ha zölden és sárgán villog akkor linkhiba van
      - Ha sárga vagy sárgán villog akkor direkt van lekapcsolva, hogy
        ne legyen hurok a forwarding domainben (???)
    - *Port Duplex LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő zölden égő LED-ek
        a full-duplex üzemmódot jelentik
      - A nem égő ledek a half-duplexet
    - *Port Speed LED*:
      - Ha ez van kiválasztva, akkor a portokon lévő ledek a link
        sebességét jelzik
      - Kikapcsolt led 10 Mb/s
      - Zöld led 100 Mb/s
      - Zölden villogó led 1000 Mb/s
    - *Power over Ethernet (PoE) LED*:
      - Ha nem világít, akkor nincsen PoE
      - Ha sárgán villog, akkor nincsen PoE módban, de legalább egy
        porton nincsen engedélyezve az áramfelvétel, vagy PoE hibás
      - Ha zöld, akkor a portokon lévő ledek a következőek lehetnek:
	- Ha nem világít, akkor a PoE ki van kapcsolva
	- Ha zöld, akkor van PoE
	- Ha zöld és sárga között váltakozik, akkor a switchnek
          nincsen elég kapacitása az áramot nyújtani
	- Ha sárgán villog, akkor PoE hiba történt
	- Ha sárga, akkor a PoE le van tiltva

*** Hibakeresés
    - ~show interfaces <interfész>~ parancs kiadásával az ~<interfész> is up~ a
      fizikai rétegről ad információt, a ~line protocol is up~ az adat
      rétegről ad információt
     | Interfész státusz     | Line protokoll státusz | Link állapot   |
     |-----------------------+------------------------+----------------|
     | Up                    | Up                     | Ok             |
     | Down                  | Down                   | Interfész hiba |
     | Administratively down | Down                   | Down           |
    - Egyéb hibák, amik nem okoznak leállást, de a működést negatívan
      befolyásolhatják:
      - *Runt Frames*: olyan ethernet keretek, amelyek kisebbek a
        megengedettnél (64 bájt)
      - *Giants*: olyan ethernet keretek, amelyek nagyobbak a
        megengedettnél
      - *CRC hibák*: az ellenőrzés nem sikerül, nagy interferencia
        okozhatja
      - *Ütközések*: csak half-duplexeknél fordulhat elő
      - *Késői ütközések*: olyan ütközések, amelyek 512 bit elküldése
        után jelentkeznek. Hosszú kábelek vagy rosszul konfigurált
        duplexitás lehet az oka
*** Biztonság
    - Nem használt portok letiltása, az ~interface range <típus>
      <modul>/<első>-<utolsó>~ parancs megkönnyíti
    - Biztonságos MAC-cím(ek) számát lehet engedélyezni egy portra
    - Biztonságos MAC-cím lehet:
      - Statikus: manuálisan vannak beállítva egy portra
      - Dinamikus:
	- A switch dinamikusan tanulja
	- Csak a switch táblában van benne
      - Ragadós:
	- A futó konfigban is el van tárolva
	- A futó konfigból el lesz távolítva, ha a biztonság ki van
          kapcsolva a portra
	- Kikapcsolásnál elveszik, de el lehet menteni a startup
          konfigba
	- A ragadós tanulás kikapcsolásával dinamikusak lesznek
    - Biztonság megsértéséből adódó üzemmód lehet:
      - Protect: ha a megengedettnél több MAC-cím bejegyzés tartozna
        egy porthoz, akkor az ismeretlen forrású kereteket eldobja
      - Restricted: ugyanaz, de itt van syslog jelzés
      - Shutdown: ugyanaz, de az interfész elérhetetlenné válik, a ~no
        shutdown~ paranccsal visszahozható
    - Alapból a biztonság ki van kapcsolva
    - Ha a biztonság be van kapcsolva, akkor max 1 darab biztonságos
      MAC-cím lehet shutdown üzemmódban, és a ragadós címtanulás ki van
      kapcsolva
* TODO Vlan
